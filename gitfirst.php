# Git repository ‡§¨‡§®‡§æ‡§®‡§æ
git init                  # ‡§®‡§à repo ‡§¨‡§®‡§æ‡§è‡§Ç
git clone <url>           # GitHub/GitLab ‡§∏‡•á clone ‡§ï‡§∞‡•á‡§Ç

# Changes track ‡§ï‡§∞‡§®‡§æ
git status                # Current status ‡§¶‡•á‡§ñ‡•á‡§Ç
git add <file>            # Single file stage ‡§ï‡§∞‡•á‡§Ç
git add .                 # ‡§∏‡§≠‡•Ä files stage ‡§ï‡§∞‡•á‡§Ç
git commit -m "message"   # Stage files commit ‡§ï‡§∞‡•á‡§Ç
git log                   # Commit history ‡§¶‡•á‡§ñ‡•á‡§Ç
git diff                  # Unstaged changes ‡§¶‡•á‡§ñ‡•á‡§Ç

# Branches
git branch                # ‡§∏‡§≠‡•Ä branches ‡§¶‡•á‡§ñ‡•á‡§Ç
git branch <branch-name>  # ‡§®‡§à branch ‡§¨‡§®‡§æ‡§è‡§Ç
git checkout <branch>     # ‡§ï‡§ø‡§∏‡•Ä branch ‡§™‡§∞ switch ‡§ï‡§∞‡•á‡§Ç
git checkout -b <branch>  # ‡§®‡§à branch ‡§¨‡§®‡§æ‡§ï‡§∞ switch ‡§ï‡§∞‡•á‡§Ç

# Merge & Delete
git merge <branch>        # ‡§ï‡§ø‡§∏‡•Ä branch ‡§ï‡•ã merge ‡§ï‡§∞‡•á‡§Ç
git branch -d <branch>    # Branch delete ‡§ï‡§∞‡•á‡§Ç

# Branch history visualize
git log --oneline --graph --all

üí° Tip:

‡§®‡§à branch current commit ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Ç ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡•§

Merge conflicts ‡§Ü‡§è ‡§§‡•ã resolve ‡§ï‡§∞‡§®‡§æ ‡§™‡§°‡§º‡§§‡§æ ‡§π‡•à‡•§



pull = fetch + merge

push = local changes ‡§ï‡•ã remote ‡§Æ‡•á‡§Ç ‡§≠‡•á‡§ú‡§®‡§æ

git config --global init.defaultBranch main

# Undo & revert
git reset --soft HEAD~1       # Last commit undo, changes ‡§∞‡§ñ‡•ã
git reset --hard HEAD~1       # Last commit ‡§î‡§∞ changes delete
git revert <commit>           # ‡§ï‡§ø‡§∏‡•Ä commit ‡§ï‡•ã ‡§â‡§≤‡§ü‡§®‡§æ

# Temporary save
git stash                     # Current changes save
git stash pop                 # Stash recover

# Pick & rebase
git cherry-pick <commit>      # ‡§ï‡§ø‡§∏‡•Ä commit ‡§ï‡•ã ‡§¶‡•Ç‡§∏‡§∞‡•Ä branch ‡§Æ‡•á‡§Ç apply
git rebase <branch>           # Branch ‡§ï‡•ã base commit ‡§ï‡•á ‡§ä‡§™‡§∞ ‡§≤‡•á ‡§ú‡§æ‡§è‡§Å

# Tags & visual
git tag <tagname>             # Release/version mark
git log --graph --decorate --all

git remote -v
mkdir newapp && cd newapp && touch index.html && git init

git fetch origin
git status

üëâ Shows commits that are ahead (local commits not pushed).
git log origin/main..main


Shows commits behind (remote commits not yet pulled).
git log main..origin/main

#add advnaced coomands for github
